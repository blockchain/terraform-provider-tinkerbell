output:
  sort-results: true

issues:
  exclude-use-default: false
  max-same-issues: 0
  max-issues-per-linter: 0
  exclude-rules:

linters-settings:
  exhaustive:
    default-signifies-exhaustive: true

# List for enabled linters can be generated for updates using the following command.
# golangci-lint linters | grep -E '^\S+:' | cut -d: -f1 | sort | sed 's/^/    - /g' | grep -v -E "($(grep '^  disable:' -A 100 .golangci.yml  | grep -E '    - \S+$' | awk '{print $2}' | tr \\n '|' | sed 's/|$//g'))"
linters:
  disable-all: false
  enable:
    - asciicheck
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - errorlint
    - exhaustive
    - exportloopref
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - golint
    - gomnd
    - gomodguard
    - goprintffuncname
    - ineffassign
    - interfacer
    - lll
    - maligned
    - misspell
    - nakedret
    - nestif
    - nlreturn
    - noctx
    - nolintlint
    - paralleltest
    - prealloc
    - rowserrcheck
    - scopelint
    - sqlclosecheck
    - structcheck
    - stylecheck
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - varcheck
    - whitespace
    - wrapcheck
    - wsl
  disable:
    # We use gofmt for formatting and gci is not compatible with it.
    - gci

    # This code do not export any API returning errors
    # and internally there is no need to use typed errors.
    - goerr113

    # Terraform testing convention do not encourage to use them.
    - testpackage

    # It is OK to have TODOs in the code.
    - godox

    # As many structs in this code won't use all the fields and it's OK.
    - exhaustivestruct
